{% extends 'base.html.twig' %} 
{% form_theme form 'form_theme_pintuer.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
     <link href="{{ asset('public/umeditor/themes/default/css/umeditor.css')}}" type="text/css" rel="stylesheet">
{% endblock %}
{% block main_content %}
    <div class="line">
        <div class="x4">
        {% for error in errors %}
        <div class="alert alert-yellow">
            <span class="close rotate-hover"></span><strong>提示：</strong>{{ error }}
        </div>
        {% endfor %}
            {{ form(form, {'attr': {'novalidate': 'novalidate', 'class': 'form-x', 'id': 'form'}}) }}
        </div>
    </div> 
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" charset="utf-8" src="{{ asset('public/umeditor/umeditor.config.js')}}"></script>
    <script type="text/javascript" charset="utf-8" src="{{ asset('public/umeditor/umeditor.min.js')}}"></script>
    <script type="text/javascript" src="{{ asset('public/umeditor/lang/zh-cn/zh-cn.js')}}"></script>
    <script type="text/javascript">
    //实例化编辑器
    window.UMEDITOR_HOME_URL = "/"; 
    var um = UM.getEditor('myEditor', {
        'topOffset': 600,
        'initialStyle': {
            'margin-top': 300
            },
        'initialFrameWidth': 600,
        'initialFrameHeight': 500,
        });
    um.addListener('blur',function(){
        $('#focush2').html('编辑器失去焦点了')
    });
    um.addListener('focus',function(){
        $('#focush2').html('')
    });
    UM.getEditor('myEditor').setContent('{{ content | raw }}');
    //按钮的操作
    function insertHtml() {
        var value = prompt('插入html代码', '');
        um.execCommand('insertHtml', value)
    }
    function isFocus(){
        alert(um.isFocus())
    }
    function doBlur(){
        um.blur()
    }
    function createEditor() {
        enableBtn();
        um = UM.getEditor('myEditor');
    }
    function getAllHtml() {
        alert(UM.getEditor('myEditor').getAllHtml())
    }
    function getContent() {
        var arr = [];
        arr.push("使用editor.getContent()方法可以获得编辑器的内容");
        arr.push("内容为：");
        arr.push(UM.getEditor('myEditor').getContent());
        alert(arr.join("\n"));
    }
    function getPlainTxt() {
        var arr = [];
        arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
        arr.push("内容为：");
        arr.push(UM.getEditor('myEditor').getPlainTxt());
        alert(arr.join('\n'))
    }
    function setContent(isAppendTo) {
        var arr = [];
        arr.push("使用editor.setContent('欢迎使用umeditor')方法可以设置编辑器的内容");
        UM.getEditor('myEditor').setContent('欢迎使用umeditor', isAppendTo);
        alert(arr.join("\n"));
    }
    function setDisabled() {
        UM.getEditor('myEditor').setDisabled('fullscreen');
        disableBtn("enable");
    }

    function setEnabled() {
        UM.getEditor('myEditor').setEnabled();
        enableBtn();
    }

    function getText() {
        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
        var range = UM.getEditor('myEditor').selection.getRange();
        range.select();
        var txt = UM.getEditor('myEditor').selection.getText();
        alert(txt)
    }

    function getContentTxt() {
        var arr = [];
        arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
        arr.push("编辑器的纯文本内容为：");
        arr.push(UM.getEditor('myEditor').getContentTxt());
        alert(arr.join("\n"));
    }
    function hasContent() {
        var arr = [];
        arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
        arr.push("判断结果为：");
        arr.push(UM.getEditor('myEditor').hasContents());
        alert(arr.join("\n"));
    }
    function setFocus() {
        UM.getEditor('myEditor').focus();
    }
    function deleteEditor() {
        disableBtn();
        UM.getEditor('myEditor').destroy();
    }
    function disableBtn(str) {
        var div = document.getElementById('btns');
        var btns = domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            if (btn.id == str) {
                domUtils.removeAttributes(btn, ["disabled"]);
            } else {
                btn.setAttribute("disabled", "true");
            }
        }
    }
    function enableBtn() {
        var div = document.getElementById('btns');
        var btns = domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            domUtils.removeAttributes(btn, ["disabled"]);
        }
    }
    // add fulltext field
    $("#form").submit( function(eventObj) {
        $('<input />').attr('type', 'hidden')
            .attr('name', "news[content]")
            .attr('value', UM.getEditor('myEditor').getContent())
            .appendTo('#form');
        return true;
    });
</script>
{% endblock %}
